<#@ licence_name=gpl_v3 #>
<#@ copyright_notice=Copyright (C) 2012-2015 Marco Craveiro <marco.craveiro@gmail.com> #>
<#@ modeline_group_name=emacs #>
<#@ stream_variable_name=fa.stream() #>
<#@ inclusion_dependency="dogen/cpp/types/formatters/odb/odb_options_formatter_stitch.hpp" #>
<#@ inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#@ inclusion_dependency=<boost/algorithm/string/case_conv.hpp> #>
<#@ containing_namespaces=dogen::cpp::formatters::odb #>
<#+

dogen::formatters::file odb_options_formatter_stitch(
    formatters::trivial_formatting_assistant& fa,
    const formattables::odb_options_info& i) {

    {
        fa.make_annotation_preamble(i.general_settings());
#>
# enable C++11. FIXME: causes ODB crash in options file.
# --std c++11

# target postgres
--database pgsql

# use the boost profile
--profile boost

# generate queries and embedded schemas
--generate-query
--generate-schema
--schema-format embedded

# use extensions similar to the dogen ones
# --ixx-suffix .ipp
# --hxx-suffix .hpp
--cxx-suffix .cpp

# fix domain includes
--include-regex '%(.*).hpp%<#= i.product_name() #>/<#= i.model_name() #>/types/$1.hpp%'

# fix odb generated includes
--include-regex '%(^[a-zA-Z0-9_]+)-odb.(.*)%<#= i.product_name() #>/<#= i.model_name() #>/odb/$1-odb.$2%'
--include-regex '%<#= i.product_name() #>/<#= i.model_name() #>/types/(.*)-odb.(.*)%<#= i.product_name() #>/<#= i.model_name() #>/odb/$1-odb.$2%'

# debug regexes
# --include-regex-trace

# make the header guards similar to dogen ones
--guard-prefix <#= boost::to_upper_copy(i.product_name()) #>_<#= boost::to_upper_copy(i.model_name()) #>_<#= boost::to_upper_copy(i.odb_folder()) #>
<#+
    } // sbf
    return fa.make_file(i.file_path());
    // return fa.make_file(i.file_path(), false/*overwrite*/);
}
#>
