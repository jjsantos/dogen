<#@ licence_name=gpl_v3 #>
<#@ copyright_notice=Copyright (C) 2012-2015 Marco Craveiro <marco.craveiro@gmail.com> #>
<#@ modeline_group_name=emacs #>
<#@ stream_variable_name=fa.stream() #>
<#@ inclusion_dependency="dogen/cpp/types/formatters/types/exception_header_formatter_stitch.hpp" #>
<#@ containing_namespaces=dogen::cpp::formatters::types #>
<#+

dogen::formatters::file exception_header_formatter_stitch(
    formatters::entity_formatting_assistant& fa,
    const formattables::exception_info& e) {

    {
        auto sbf(fa.make_scoped_boilerplate_formatter());
        {
            auto snf(fa.make_scoped_namespace_formatter());
#>

<#+
            fa.comment(e.documentation());
#>
class <#= e.name() #> : public virtual std::exception, public virtual boost::exception {
public:
    <#= e.name() #>() = default;
    ~<#= e.name() #>() noexcept = default;

public:
    <#= e.name() #>(const std::string& message) : message_(message) { }

public:
    const char* what() const noexcept { return(message_.c_str()); }

private:
    const std::string message_;
};

<#+
        } // snf
#>

<#+
    } // sbf
    return fa.make_file();
}

#>
